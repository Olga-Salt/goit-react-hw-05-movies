{"version":3,"file":"static/js/445.0cafe856.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","helpers/fallback.js","webpack://goit-react-hw-05-movies/./src/components/Spinner/Spinner.module.css?d43e","components/Spinner/Spinner.jsx","pages/MoviesPage.jsx","services/movie-api.js","webpack://goit-react-hw-05-movies/./src/pages/Pages.module.css?6bb4"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MoviesList_movieList__8BnEE\",\"movieItem\":\"MoviesList_movieItem__p4FQU\",\"movieTitle\":\"MoviesList_movieTitle__CxO8p\",\"img\":\"MoviesList_img__v4jFC\",\"movieContainer\":\"MoviesList_movieContainer__Urnhj\",\"upBtn\":\"MoviesList_upBtn__XOwaV\",\"background\":\"MoviesList_background__Mn+SS\"};","import { useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport styles from './MoviesList.module.css';\nimport { noPoster } from '../../helpers/fallback';\n\nconst imgUrl = 'https://image.tmdb.org/t/p/w400';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  function setScroll() {\n    const posTop = window.pageYOffset;\n    localStorage.setItem('scroll', posTop);\n  }\n\n  useEffect(() => {\n    const scrollPos = localStorage.getItem('scroll');\n    window.scrollTo(0, scrollPos ?? 0);\n  }, []);\n\n  return (\n    <div className={styles.movieContainer}>\n      <ul className={styles.movieList}>\n        {movies.results.map(movie => (\n          <li key={movie.id} className={styles.movieItem} onClick={setScroll}>\n            <Link\n              to={{\n                pathname: `/movies/${movie.id}`,\n                state: {\n                  from: location,\n                },\n              }}\n            >\n              <img\n                src={\n                  movie.poster_path ? `${imgUrl}${movie.poster_path}` : noPoster\n                }\n                alt={movie.title}\n                className={styles.img}\n              />\n              <h2 className={styles.movieTitle}>{movie.original_title}</h2>\n            </Link>\n          </li>\n        ))}\n      </ul>\n      <button\n        className={styles.upBtn}\n        onClick={() => {\n          window.scrollTo(0, 0);\n          localStorage.setItem('scroll', 0);\n        }}\n      >\n        up\n      </button>\n    </div>\n  );\n};\n\nexport default MoviesList;\n","export const noPoster = 'https://www.movienewz.com/img/films/poster-holder.jpg';\n\nexport const noBackdrop =\n  'https://user-images.githubusercontent.com/10515204/56117400-9a911800-5f85-11e9-878b-3f998609a6c8.jpg';\n","// extracted by mini-css-extract-plugin\nexport default {\"SpinnerWrap\":\"Spinner_SpinnerWrap__jifnD\"};","import React from 'react';\nimport { Bars } from 'react-loader-spinner';\nimport styles from './Spinner.module.css';\nfunction Spinner() {\n  return (\n    <div className={styles.SpinnerWrap}>\n      <Bars color=\"#6ea5f8\" height={120} width={120} arialLabel=\"loading\" />\n    </div>\n  );\n}\n\nexport default Spinner;\n","import { React, useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { BsSearch } from 'react-icons/bs';\nimport * as movieApi from '../services/movie-api';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport Spinner from '../components/Spinner/Spinner';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport styles from './Pages.module.css';\n\nexport default function MoviesPage() {\n  const [movies, setMovies] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const location = useLocation();\n  const history = useHistory();\n  const query = new URLSearchParams(location.search).get('query');\n\n  useEffect(() => {\n    if (query) {\n      const fetchSearch = async () => {\n        setLoading(true);\n\n        await movieApi.fetchMovieByQuery(query).then(movies => {\n          if (movies.results.length === 0) {\n            setLoading(false);\n\n            return toast.warning('There is no such movie', {\n              theme: 'colored',\n            });\n          }\n\n          setMovies(movies);\n          setLoading(false);\n        });\n      };\n      fetchSearch();\n    }\n  }, [query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let queryValue = e.currentTarget.elements.query.value;\n\n    if (queryValue === '') {\n      return;\n    }\n\n    if (queryValue.trim() === '') {\n      return toast.warning('Enter movie title', {\n        theme: 'colored',\n      });\n    }\n\n    history.push({\n      ...location,\n      search: `query=${queryValue.trim()}`,\n    });\n\n    e.currentTarget.reset();\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit} className={styles.form}>\n        <input\n          className={styles.searchInput}\n          type=\"text\"\n          name=\"query\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search film \"\n        />\n        <button type=\"submit\" className={styles.searchBtn}>\n          <BsSearch />\n        </button>\n      </form>\n\n      {loading && <Spinner />}\n      {movies && <MoviesList movies={movies} />}\n    </div>\n  );\n}\n","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst KEY = '5fe4e7cb700e0e7e8be54b15a82973ef';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nasync function fetchWithErrorHandling(url = '') {\n  const response = await fetch(url);\n  return response.ok\n    ? response.json()\n    : Promise.reject(\n        new Error(toast.error('Something went wrong :(', { theme: 'colored' }))\n      );\n}\n\nexport function fetchTrandMovie() {\n  return fetchWithErrorHandling(`${BASE_URL}trending/movie/day?api_key=${KEY}`);\n}\n\nexport function fetchMovieById(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}movie/${movieId}?api_key=${KEY}&language=en-US&append_to_response=reviews,credits,videos`\n  );\n}\n\nexport function fetchMovieByQuery(name) {\n  return fetchWithErrorHandling(\n    ` ${BASE_URL}search/movie?api_key=${KEY}&query=${name}&language=en-US&page=1&include_adult=false`\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"ditalsNavList\":\"Pages_ditalsNavList__012re\",\"ditalsNavItem\":\"Pages_ditalsNavItem__YnURz\",\"detailsNavLink\":\"Pages_detailsNavLink__XumUd\",\"activeLink\":\"Pages_activeLink__wWiQU\",\"form\":\"Pages_form__Vg5JS\",\"searchInput\":\"Pages_searchInput__MR6CM\",\"searchBtn\":\"Pages_searchBtn__dxFm1\",\"ditailsWrap\":\"Pages_ditailsWrap__5fjN+\",\"goBackBtn\":\"Pages_goBackBtn__llaRh\",\"carouselItem\":\"Pages_carouselItem__AGbiK\",\"carouselItem__img\":\"Pages_carouselItem__img__JWJg8\",\"carouselItem__txt\":\"Pages_carouselItem__txt__XfdB+\",\"author\":\"Pages_author__UEC5Y\",\"authorName\":\"Pages_authorName__1z-Nm\",\"reviewText\":\"Pages_reviewText__bu5bB\",\"trailerLink\":\"Pages_trailerLink__6IY9d\"};"],"names":["movies","location","useLocation","setScroll","posTop","window","pageYOffset","localStorage","setItem","useEffect","scrollPos","getItem","scrollTo","className","styles","results","map","movie","onClick","to","pathname","id","state","from","src","poster_path","noPoster","alt","title","original_title","noBackdrop","color","height","width","arialLabel","MoviesPage","useState","setMovies","loading","setLoading","history","useHistory","query","URLSearchParams","search","get","fetchSearch","movieApi","then","length","toast","theme","onSubmit","e","preventDefault","queryValue","currentTarget","elements","value","trim","push","reset","type","name","autoComplete","autoFocus","placeholder","MoviesList","KEY","BASE_URL","fetchWithErrorHandling","url","fetch","response","ok","json","Promise","reject","Error","fetchTrandMovie","fetchMovieById","movieId","fetchMovieByQuery"],"sourceRoot":""}