{"version":3,"file":"static/js/932.eee9d704.chunk.js","mappings":"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","sources":["helpers/fallback.js","webpack://goit-react-hw-05-movies/./src/components/MovieDetailsInfo/MovieDetailsInfo.module.css?3ddb","components/MovieDetailsInfo/MovieDetailsInfo.jsx","pages/MovieCastPage.jsx","pages/MovieReviewsPage.jsx","components/MovieDetailsNav/MovieDetailsNav.jsx","pages/MovieDetailsPage.jsx","services/movie-api.js","webpack://goit-react-hw-05-movies/./src/pages/Pages.module.css?6bb4"],"sourcesContent":["export const noPoster = 'https://www.movienewz.com/img/films/poster-holder.jpg';\n\nexport const noBackdrop =\n  'https://user-images.githubusercontent.com/10515204/56117400-9a911800-5f85-11e9-878b-3f998609a6c8.jpg';\n","// extracted by mini-css-extract-plugin\nexport default {\"infoWrap\":\"MovieDetailsInfo_infoWrap__NYXoh\",\"imgWrap\":\"MovieDetailsInfo_imgWrap__KqQCB\",\"backDropImg\":\"MovieDetailsInfo_backDropImg__q1k3+\",\"movieTitle\":\"MovieDetailsInfo_movieTitle__StdEt\",\"scoreValue\":\"MovieDetailsInfo_scoreValue__4r7G9\",\"overview\":\"MovieDetailsInfo_overview__S8PSr\",\"genresList\":\"MovieDetailsInfo_genresList__T2ex1\",\"genresItem\":\"MovieDetailsInfo_genresItem__Bp0r3\"};","import { noBackdrop } from '../../helpers/fallback';\nimport styles from './MovieDetailsInfo.module.css';\nconst imgUrl = 'https://image.tmdb.org/t/p/original';\n\nexport default function MovieDetailsInfo({ movie }) {\n  return (\n    <div className={styles.infoWrap}>\n      {movie && (\n        <>\n          <div className={styles.imgWrap}>\n            <img\n              className={styles.backDropImg}\n              src={\n                movie.backdrop_path\n                  ? `${imgUrl}${movie.backdrop_path}`\n                  : noBackdrop\n              }\n              alt={movie.title}\n            />\n          </div>\n          <h2 className={styles.movieTitle}>\n            {movie.original_title}{' '}\n            <span>({movie.release_date.slice(0, 4)})</span>\n          </h2>\n          <p>\n            User score:{' '}\n            <span className={styles.scoreValue}>\n              {movie.vote_average * 10} %\n            </span>\n          </p>\n          <p>Overview </p>\n          <p className={styles.overview}>{movie.overview}</p>\n          <p>Genres</p>\n          <ul className={styles.genresList}>\n            {movie.genres.map(genre => (\n              <li key={genre.id} className={styles.genresItem}>\n                {genre.name}\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n    </div>\n  );\n}\n","const imgUrl = 'https://image.tmdb.org/t/p/w300';\n\nexport default function MovieCastPage({ movie }) {\n  return (\n    <ul>\n      {movie.credits.cast.map(cast => (\n        <li key={cast.cast_id}>\n          {cast.profile_path ? (\n            <img src={` ${imgUrl}${cast.profile_path}`} alt={cast.name} />\n          ) : (\n            'No image'\n          )}\n\n          <p>{cast.original_name}</p>\n          <p>{cast.character}</p>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","export default function MovieReviewsPage({ movie }) {\n  const reviews = movie.reviews.results;\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <p>Author: {review.author}</p>\n              <p>\"{review.content}\"</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </>\n  );\n}\n","import { Route } from 'react-router-dom';\nimport { NavLink } from 'react-router-dom';\n\nimport styles from '../../pages/Pages.module.css';\n\nimport MovieCastPage from '../../pages/MovieCastPage';\nimport MovieReviewsPage from '../../pages/MovieReviewsPage';\n\nexport default function MovieDetailsNav({ movie, match }) {\n  const { url, path } = match;\n\n  return (\n    <>\n      <ul>\n        <li>\n          <NavLink to={`${url}/cast`} activeClassName={styles.activeLink}>\n            Cast\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to={`${url}/reviews`} activeClassName={styles.activeLink}>\n            Reviews\n          </NavLink>\n        </li>\n      </ul>\n      <hr />\n\n      <Route path={`${path}/cast`}>\n        {movie && <MovieCastPage movie={movie} />}\n      </Route>\n      <Route path={`${path}/reviews`}>\n        {movie && <MovieReviewsPage movie={movie} />}\n      </Route>\n    </>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport {\n  useParams,\n  useRouteMatch,\n  useHistory,\n  useLocation,\n} from 'react-router-dom';\nimport { IoArrowBackSharp } from 'react-icons/io5';\n\nimport * as movieApi from '../services/movie-api';\nimport MovieDetailsInfo from '../components/MovieDetailsInfo/MovieDetailsInfo';\nimport MovieDetailsNav from '../components/MovieDetailsNav/MovieDetailsNav';\nimport styles from './Pages.module.css';\n\nexport default function MovieDetailsPage() {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const match = useRouteMatch();\n  const hist = useHistory();\n  const location = useLocation();\n\n  useEffect(() => {\n    movieApi.fetchMovieById(movieId).then(setMovie);\n  }, [movieId]);\n\n  const goBack = () => {\n    hist.push(location?.state?.from ?? '/movies');\n  };\n\n  return (\n    <div className={styles.ditailsWrap}>\n      <div>\n        <button onClick={goBack} className={styles.goBackBtn}>\n          <IoArrowBackSharp /> Go Back\n        </button>\n      </div>\n\n      <MovieDetailsInfo movie={movie} />\n      <h3>Additional information</h3>\n\n      <MovieDetailsNav movie={movie} match={match} />\n    </div>\n  );\n}\n","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst KEY = '5fe4e7cb700e0e7e8be54b15a82973ef';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nasync function fetchWithErrorHandling(url = '') {\n  const response = await fetch(url);\n  return response.ok\n    ? response.json()\n    : Promise.reject(\n        new Error(toast.error('Something went wrong :(', { theme: 'colored' }))\n      );\n}\n\nexport function fetchTrandMovie() {\n  return fetchWithErrorHandling(`${BASE_URL}trending/movie/day?api_key=${KEY}`);\n}\n\nexport function fetchMovieById(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}movie/${movieId}?api_key=${KEY}&language=en-US&append_to_response=reviews,credits`\n  );\n}\n\nexport function fetchMovieByQuery(name) {\n  return fetchWithErrorHandling(\n    ` ${BASE_URL}search/movie?api_key=${KEY}&query=${name}&language=en-US&page=1&include_adult=false`\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"activeLink\":\"Pages_activeLink__wWiQU\",\"form\":\"Pages_form__Vg5JS\",\"searchInput\":\"Pages_searchInput__MR6CM\",\"searchBtn\":\"Pages_searchBtn__dxFm1\",\"ditailsWrap\":\"Pages_ditailsWrap__5fjN+\",\"goBackBtn\":\"Pages_goBackBtn__llaRh\"};"],"names":["noPoster","noBackdrop","MovieDetailsInfo","movie","className","styles","src","backdrop_path","alt","title","original_title","release_date","slice","vote_average","overview","genres","map","genre","name","id","MovieCastPage","credits","cast","profile_path","original_name","character","cast_id","MovieReviewsPage","reviews","results","length","review","author","content","MovieDetailsNav","match","url","path","to","activeClassName","MovieDetailsPage","useState","setMovie","movieId","useParams","useRouteMatch","hist","useHistory","location","useLocation","useEffect","movieApi","then","onClick","push","state","from","KEY","BASE_URL","fetchWithErrorHandling","fetch","response","ok","json","Promise","reject","Error","toast","theme","fetchTrandMovie","fetchMovieById","fetchMovieByQuery"],"sourceRoot":""}