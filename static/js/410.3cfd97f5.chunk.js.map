{"version":3,"file":"static/js/410.3cfd97f5.chunk.js","mappings":"yMACA,EAA4B,8BAA5B,EAAsE,8BAAtE,EAAiH,+BAAjH,EAAsJ,wBAAtJ,EAA+L,mCAA/L,EAA0O,0B,mBC2D1O,EAnDmB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,SAASC,IACP,IAAMC,EAASC,OAAOC,YACtBC,aAAaC,QAAQ,SAAUJ,GAQjC,OALAK,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAYH,aAAaI,QAAQ,UACvCN,OAAOO,SAAS,EAAhB,OAAmBF,QAAnB,IAAmBA,EAAAA,EAAa,KAC/B,KAGD,iBAAKG,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,SACGd,EAAOe,QAAQC,KAAI,SAAAC,GAAK,OACvB,eAAmBJ,UAAWC,EAAkBI,QAASf,EAAzD,UACE,UAAC,KAAD,CACEgB,GAAI,CACFC,SAAS,WAAD,OAAaH,EAAMI,IAC3BC,MAAO,CACLC,KAAMtB,IAJZ,WAQE,gBACEuB,IACEP,EAAMQ,YAAN,UA9BH,mCA8BG,OAAgCR,EAAMQ,aAAgBC,EAAAA,EAExDC,IAAKV,EAAMW,MACXf,UAAWC,KAEb,eAAID,UAAWC,EAAf,SAAmCG,EAAMY,qBAhBpCZ,EAAMI,UAqBnB,mBACER,UAAWC,EACXI,QAAS,WACPb,OAAOO,SAAS,EAAG,GACnBL,aAAaC,QAAQ,SAAU,IAJnC,qB,4EC/CC,IAAMkB,EAAW,wDAEXI,EACX,wG,oGCFF,EAAwB,2B,SCGT,SAASC,EAAT,GAAiC,IAAVH,EAAS,EAATA,MACpC,OAAO,eAAIf,UAAWC,EAAf,SAA8Bc,I,cCCxB,SAASI,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOjC,EAAP,KAAekC,EAAf,KAMA,OAJAzB,EAAAA,EAAAA,YAAU,WACR0B,EAAAA,KAA2BC,KAAKF,KAC/B,KAGD,iCACE,SAACH,EAAD,CAAaH,MAAM,mBAClB5B,IAAU,SAACqC,EAAA,EAAD,CAAYrC,OAAQA,S,gJCb/BsC,G,QAAM,oCACNC,EAAW,gCAAjB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,yGAAsCC,EAAtC,+BAA4C,GAA5C,SACyBC,MAAMD,GAD/B,cACQE,EADR,yBAESA,EAASC,GACZD,EAASE,OACTC,QAAQC,OACN,IAAIC,MAAMC,EAAAA,GAAAA,MAAY,0BAA2B,CAAEC,MAAO,eALlE,mEASO,SAASC,IACd,OAAOX,EAAuB,GAAD,OAAID,EAAJ,sCAA0CD,IAGlE,SAASc,EAAeC,GAC7B,OAAOb,EAAuB,GAAD,OACxBD,EADwB,iBACPc,EADO,oBACYf,EADZ,8DAKxB,SAASgB,EAAkBC,GAChC,OAAOf,EAAuB,IAAD,OACvBD,EADuB,gCACSD,EADT,kBACsBiB,EADtB","sources":["webpack://goit-react-hw-05-movies/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","helpers/fallback.js","webpack://goit-react-hw-05-movies/./src/components/PageHeading/PageHeading.module.css?b132","components/PageHeading/PageHeading.jsx","pages/TrandMoviesPage.jsx","services/movie-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MoviesList_movieList__8BnEE\",\"movieItem\":\"MoviesList_movieItem__p4FQU\",\"movieTitle\":\"MoviesList_movieTitle__CxO8p\",\"img\":\"MoviesList_img__v4jFC\",\"movieContainer\":\"MoviesList_movieContainer__Urnhj\",\"upBtn\":\"MoviesList_upBtn__XOwaV\",\"background\":\"MoviesList_background__Mn+SS\"};","import { useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport styles from './MoviesList.module.css';\nimport { noPoster } from '../../helpers/fallback';\n\nconst imgUrl = 'https://image.tmdb.org/t/p/w400';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  function setScroll() {\n    const posTop = window.pageYOffset;\n    localStorage.setItem('scroll', posTop);\n  }\n\n  useEffect(() => {\n    const scrollPos = localStorage.getItem('scroll');\n    window.scrollTo(0, scrollPos ?? 0);\n  }, []);\n\n  return (\n    <div className={styles.movieContainer}>\n      <ul className={styles.movieList}>\n        {movies.results.map(movie => (\n          <li key={movie.id} className={styles.movieItem} onClick={setScroll}>\n            <Link\n              to={{\n                pathname: `/movies/${movie.id}`,\n                state: {\n                  from: location,\n                },\n              }}\n            >\n              <img\n                src={\n                  movie.poster_path ? `${imgUrl}${movie.poster_path}` : noPoster\n                }\n                alt={movie.title}\n                className={styles.img}\n              />\n              <h2 className={styles.movieTitle}>{movie.original_title}</h2>\n            </Link>\n          </li>\n        ))}\n      </ul>\n      <button\n        className={styles.upBtn}\n        onClick={() => {\n          window.scrollTo(0, 0);\n          localStorage.setItem('scroll', 0);\n        }}\n      >\n        up\n      </button>\n    </div>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.object.isRequired,\n};\n","export const noPoster = 'https://www.movienewz.com/img/films/poster-holder.jpg';\n\nexport const noBackdrop =\n  'https://user-images.githubusercontent.com/10515204/56117400-9a911800-5f85-11e9-878b-3f998609a6c8.jpg';\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"PageHeading_title__1wPIF\"};","import PropTypes from 'prop-types';\n\nimport styles from './PageHeading.module.css';\n\nexport default function PageHeading({ title }) {\n  return <h1 className={styles.title}>{title}</h1>;\n}\n\nPageHeading.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nimport PageHeading from '../components/PageHeading/PageHeading';\nimport * as movieApi from '../services/movie-api';\n\nexport default function TrandMoviePage() {\n  const [movies, setMovies] = useState(null);\n\n  useEffect(() => {\n    movieApi.fetchTrandMovie().then(setMovies);\n  }, []);\n\n  return (\n    <>\n      <PageHeading title=\"Tranding today\" />\n      {movies && <MoviesList movies={movies} />}\n    </>\n  );\n}\n","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst KEY = '5fe4e7cb700e0e7e8be54b15a82973ef';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nasync function fetchWithErrorHandling(url = '') {\n  const response = await fetch(url);\n  return response.ok\n    ? response.json()\n    : Promise.reject(\n        new Error(toast.error('Something went wrong :(', { theme: 'colored' }))\n      );\n}\n\nexport function fetchTrandMovie() {\n  return fetchWithErrorHandling(`${BASE_URL}trending/movie/day?api_key=${KEY}`);\n}\n\nexport function fetchMovieById(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}movie/${movieId}?api_key=${KEY}&language=en-US&append_to_response=reviews,credits,videos`\n  );\n}\n\nexport function fetchMovieByQuery(name) {\n  return fetchWithErrorHandling(\n    ` ${BASE_URL}search/movie?api_key=${KEY}&query=${name}&language=en-US&page=1&include_adult=false`\n  );\n}\n"],"names":["movies","location","useLocation","setScroll","posTop","window","pageYOffset","localStorage","setItem","useEffect","scrollPos","getItem","scrollTo","className","styles","results","map","movie","onClick","to","pathname","id","state","from","src","poster_path","noPoster","alt","title","original_title","noBackdrop","PageHeading","TrandMoviePage","useState","setMovies","movieApi","then","MoviesList","KEY","BASE_URL","fetchWithErrorHandling","url","fetch","response","ok","json","Promise","reject","Error","toast","theme","fetchTrandMovie","fetchMovieById","movieId","fetchMovieByQuery","name"],"sourceRoot":""}