{"version":3,"file":"static/js/410.3323bf9f.chunk.js","mappings":"4LACA,GAAgB,UAAY,8BAA8B,UAAY,8BAA8B,WAAa,+BAA+B,IAAM,yB,kBCkCtJ,EA9BmB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,gBAAKC,UAAWC,EAAAA,eAAhB,UACE,eAAID,UAAWC,EAAAA,UAAf,SACGJ,EAAOK,QAAQC,KAAI,SAAAC,GAAK,OACvB,eAAmBJ,UAAWC,EAAAA,UAA9B,UACE,UAAC,KAAD,CACEI,GAAI,CACFC,SAAS,WAAD,OAAaF,EAAMG,IAC3BC,MAAO,CAAEC,KAAMX,IAHnB,WAME,gBACEY,IACEN,EAAMO,YAAN,UAlBH,mCAkBG,OAAgCP,EAAMO,aAAgBC,EAAAA,EAExDC,IAAKT,EAAMU,MACXd,UAAWC,EAAAA,OAEb,eAAID,UAAWC,EAAAA,WAAf,SAAmCG,EAAMW,qBAdpCX,EAAMG,a,2ECZlB,IAAMK,EAAW,wDAEXI,EACX,wG,gGCFF,EAAwB,2B,SCAT,SAASC,EAAT,GAAiC,IAAVH,EAAS,EAATA,MACpC,OAAO,eAAId,UAAWC,EAAf,SAA8Ba,I,aCIxB,SAASI,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOtB,EAAP,KAAeuB,EAAf,KAOA,OAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,KAA2BC,KAAKH,KAC/B,KAGD,iCACE,SAACH,EAAD,CAAaH,MAAM,mBAClBjB,IAAU,SAAC2B,EAAA,EAAD,CAAY3B,OAAQA,S,6ICd/B4B,G,OAAM,oCACNC,EAAW,gCAAjB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,yGAAsCC,EAAtC,+BAA4C,GAA5C,SACyBC,MAAMD,GAD/B,cACQE,EADR,yBAESA,EAASC,GACZD,EAASE,OACTC,QAAQC,OACN,IAAIC,MAAMC,EAAAA,GAAAA,MAAY,0BAA2B,CAAEC,MAAO,eALlE,mEASO,SAASC,IACd,OAAOX,EAAuB,GAAD,OAAID,EAAJ,sCAA0CD,IAGlE,SAASc,EAAeC,GAC7B,OAAOb,EAAuB,GAAD,OACxBD,EADwB,iBACPc,EADO,oBACYf,EADZ,uDAKxB,SAASgB,EAAkBC,GAChC,OAAOf,EAAuB,IAAD,OACvBD,EADuB,gCACSD,EADT,kBACsBiB,EADtB","sources":["webpack://goit-react-hw-05-movies/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","helpers/fallback.js","webpack://goit-react-hw-05-movies/./src/components/PageHeading/PageHeading.module.css?b132","components/PageHeading/PageHeading.jsx","pages/TrandMoviesPage.jsx","services/movie-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MoviesList_movieList__8BnEE\",\"movieItem\":\"MoviesList_movieItem__p4FQU\",\"movieTitle\":\"MoviesList_movieTitle__CxO8p\",\"img\":\"MoviesList_img__v4jFC\"};","import { Link, useLocation } from 'react-router-dom';\nimport styles from './MoviesList.module.css';\nimport { noPoster } from '../../helpers/fallback';\nconst imgUrl = 'https://image.tmdb.org/t/p/w400';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <div className={styles.movieContainer}>\n      <ul className={styles.movieList}>\n        {movies.results.map(movie => (\n          <li key={movie.id} className={styles.movieItem}>\n            <Link\n              to={{\n                pathname: `/movies/${movie.id}`,\n                state: { from: location },\n              }}\n            >\n              <img\n                src={\n                  movie.poster_path ? `${imgUrl}${movie.poster_path}` : noPoster\n                }\n                alt={movie.title}\n                className={styles.img}\n              />\n              <h2 className={styles.movieTitle}>{movie.original_title}</h2>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default MoviesList;\n","export const noPoster = 'https://www.movienewz.com/img/films/poster-holder.jpg';\n\nexport const noBackdrop =\n  'https://user-images.githubusercontent.com/10515204/56117400-9a911800-5f85-11e9-878b-3f998609a6c8.jpg';\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"PageHeading_title__1wPIF\"};","import styles from './PageHeading.module.css';\nexport default function PageHeading({ title }) {\n  return <h1 className={styles.title}>{title}</h1>;\n}\n","import { useEffect, useState } from 'react';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nimport PageHeading from '../components/PageHeading/PageHeading';\nimport * as movieApi from '../services/movie-api';\n\nexport default function TrandMoviePage() {\n  const [movies, setMovies] = useState(null);\n  //   const match = useRouteMatch();\n\n  useEffect(() => {\n    movieApi.fetchTrandMovie().then(setMovies);\n  }, []);\n\n  return (\n    <>\n      <PageHeading title=\"Tranding today\" />\n      {movies && <MoviesList movies={movies} />}\n    </>\n  );\n}\n","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst KEY = '5fe4e7cb700e0e7e8be54b15a82973ef';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nasync function fetchWithErrorHandling(url = '') {\n  const response = await fetch(url);\n  return response.ok\n    ? response.json()\n    : Promise.reject(\n        new Error(toast.error('Something went wrong :(', { theme: 'colored' }))\n      );\n}\n\nexport function fetchTrandMovie() {\n  return fetchWithErrorHandling(`${BASE_URL}trending/movie/day?api_key=${KEY}`);\n}\n\nexport function fetchMovieById(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}movie/${movieId}?api_key=${KEY}&language=en-US&append_to_response=reviews,credits`\n  );\n}\n\nexport function fetchMovieByQuery(name) {\n  return fetchWithErrorHandling(\n    ` ${BASE_URL}search/movie?api_key=${KEY}&query=${name}&language=en-US&page=1&include_adult=false`\n  );\n}\n"],"names":["movies","location","useLocation","className","styles","results","map","movie","to","pathname","id","state","from","src","poster_path","noPoster","alt","title","original_title","noBackdrop","PageHeading","TrandMoviePage","useState","setMovies","useEffect","movieApi","then","MoviesList","KEY","BASE_URL","fetchWithErrorHandling","url","fetch","response","ok","json","Promise","reject","Error","toast","theme","fetchTrandMovie","fetchMovieById","movieId","fetchMovieByQuery","name"],"sourceRoot":""}